{"version":3,"file":"main.4b4aec62e123a6817b51.bundle.js","sources":["webpack:///./src/components/atoms/Hamburger/index.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport './_hamburger.scss';\r\n\r\ninterface IProps {\r\n\texpanded?: boolean;\r\n\ttype?: string;\r\n\tonClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nexport const HamburgerTypes = {\r\n\tDefault: '',\r\n\tArrowUp: 'arrow-up',\r\n\tArrowDown: 'arrow-down',\r\n\tArrowLeft: 'arrow-left',\r\n\tArrowRight: 'arrow-right',\r\n};\r\n\r\nconst Hamburger: React.FC<IProps> = (props) => {\r\n\tconst [init, setInit] = React.useState(true);\r\n\tconst [expanded, setExpanded] = React.useState(props.expanded);\r\n\r\n\tReact.useLayoutEffect(() => {\r\n\t\tsetExpanded(props.expanded);\r\n\t}, [props.expanded]);\r\n\r\n\tconst handleOnClick = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n\t\tsetInit(false); // on first click, enable animations\r\n\t\tif (props.onClick) props.onClick(e);\r\n\t\telse setExpanded((expanded) => !expanded);\r\n\t};\r\n\r\n\tconst expandType = props.type ? `hamburger--${props.type}` : 'hamburger--close';\r\n\tconst componentClass = classNames('hamburger', expandType, {\r\n\t\t'hamburger--init': init, // init state has styles preventing the initial reverse animation\r\n\t\t'hamburger--expanded': expanded,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<button type=\"button\" className={componentClass} onClick={handleOnClick}>\r\n\t\t\t<span className=\"hamburger__bar\" />\r\n\t\t\t<span className=\"hamburger__bar\" />\r\n\t\t\t<span className=\"hamburger__bar\" />\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Hamburger;\r\n"],"mappings":"AAUA","sourceRoot":""}